name: Deploy to prod

on:
  push:
    branches:
      - main

jobs:
  build-test-and-deploy-production:
    name: Build, test and deploy to production on merge to master branch
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Auth gcloud CLI for image-store
        uses: google-github-actions/auth@main
        with:
          credentials_json: ${{ secrets.GCP_SA_DIGDIR_FDK_GCR_KEY }}

      - name: Configure docker to use the gcloud command-line tool as a credential helper
        run: gcloud auth configure-docker eu.gcr.io

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Package with maven
        run: mvn clean package --no-transfer-progress
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: eu.gcr.io/digdir-fdk-infra/dataservice-catalog
          flavor: |
            latest=true
          tags: |
            type=raw,value=${{ github.sha }},priority=1000
            type=ref,event=branch

      - name: Build
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args:  |
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}

      - name: Set max map count for elasticsearch
        run: sudo sysctl -w vm.max_map_count=262144
        
      - name: Run tests
        run: mvn -DtestImageName="eu.gcr.io/digdir-fdk-infra/dataservice-catalog:latest" verify --no-transfer-progress

      - name: Push
        id: docker_push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args:  |
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}

      - name: Apply Helm template
        run: |
          helm repo add fdk https://informasjonsforvaltning.github.io/helm-chart/
          helm fetch --untar --untardir ./helm fdk/dataservice-catalog
          helm template --set DOCKER_IMAGE_NAME="eu.gcr.io/digdir-fdk-infra/dataservice-catalog:$GITHUB_SHA" \
          -f ./helm/dataservice-catalog/values/prod.yaml \
          ./helm/dataservice-catalog/ > ./kubectlapply.yaml
          chmod o+w ./kubectlapply.yaml
          cat kubectlapply.yaml

      - name: Auth gcloud CLI for deploy
        uses: google-github-actions/auth@main
        with:
          credentials_json: ${{ secrets.DIGDIR_FDK_PROD_AUTODEPLOY }}

      - name: Deploy to GCP & check status
        run: |
          gcloud container clusters get-credentials digdir-fdk-dev --region europe-north1-a --project digdir-fdk-dev
          kubectl apply -f ./kubectlapply.yaml --force
          if ! kubectl --namespace=prod rollout status deployment dataservice-catalog; then
            kubectl --namespace=prod rollout undo deployment dataservice-catalog
            kubectl --namespace=prod rollout status deployment dataservice-catalog
            exit 1
          fi

      - name: Notify slack
        uses: 8398a7/action-slack@v3
        with:
          mention: 'channel'
          if_mention: failure
          status: ${{ job.status }}
          author_name: 'Application: dataservice-catalog | Environment: prod'
          fields: commit,author,workflow,message
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()

      - name: Trigger deploy to demo
        uses: peter-evans/repository-dispatch@main
        with:
          token: ${{ secrets.DISPATCH_TOKEN }}
          event-type: deploy-demo
          client-payload: '{"sha": "${{ github.sha }}"}'
