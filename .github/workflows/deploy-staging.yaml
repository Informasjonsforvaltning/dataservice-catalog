name: Deploy to staging

on:
  pull_request:
    types: [ready_for_review, opened, reopened, synchronize]
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build and deploy to staging environment when pull request is created
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - uses: actions/checkout@v2

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_email: ${{ secrets.GCP_SA_DIGDIR_FDK_GCR_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_DIGDIR_FDK_GCR_KEY }}

      - name: Configure docker to use the gcloud command-line tool as a credential helper
        run: gcloud auth configure-docker eu.gcr.io

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Package with maven
        run: mvn clean package --no-transfer-progress

      - name: Build Docker image with GitHub commit sha and staging tag
        run: docker build -f Dockerfile.prod . -t eu.gcr.io/digdir-fdk-infra/dataservice-catalog:$GITHUB_SHA -t eu.gcr.io/digdir-fdk-infra/dataservice-catalog:staging_latest

      - name: Set max map count for elasticsearch
        run: sudo sysctl -w vm.max_map_count=262144

      - name: Run tests
        run: mvn -DtestImageName="eu.gcr.io/digdir-fdk-infra/dataservice-catalog:staging_latest" verify --no-transfer-progress

      - name: Publish docker image to Google Cloud
        run: docker -- push eu.gcr.io/digdir-fdk-infra/dataservice-catalog -a

      - name: Apply Helm template
        run: |
          helm repo add fdk https://informasjonsforvaltning.github.io/helm-chart/
          helm fetch --untar --untardir ./helm fdk/dataservice-catalog
          helm template --set DOCKER_IMAGE_NAME="eu.gcr.io/digdir-fdk-infra/dataservice-catalog:$GITHUB_SHA" -f ./helm/dataservice-catalog/values/staging.yaml ./helm/dataservice-catalog/ > ./kubectlapply.yaml
          chmod o+w ./kubectlapply.yaml
          cat kubectlapply.yaml

      - name: Get kubeconfig file from GKE
        uses: machine-learning-apps/gke-kubeconfig@master
        with:
          application_credentials: ${{ secrets.DIGDIR_FDK_DEV_AUTODEPLOY }}
          project_id: digdir-fdk-dev
          location_zone: europe-north1-a
          cluster_name: digdir-fdk-dev

      - name: Deploy to staging
        uses: docker://bitnami/kubectl:latest
        env:
          KUBECONFIG: '/github/workspace/.kube/config'
        with:
          args: "apply -f ./kubectlapply.yaml --force"

      - name: Notify slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: 'Application: dataservice-catalog | Environment: staging'
          fields: commit,author,workflow
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
